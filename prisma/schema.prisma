generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String @id @default(uuid())
  email         String @unique
  passwordHash  String
  userAuthToken String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role   Roles @relation(fields: [roleId], references: [id])
  roleId Int
}

model Roles {
  id   Int    @id @default(autoincrement())
  name String @unique
  User User[]
}

model Cat {
  id                Int      @id @default(autoincrement())
  ras               CatRace  @relation(fields: [rasId], references: [id])
  rasId             Int
  gecastreerd       Boolean
  datumVerloren     DateTime
  gemeenteVerloren  Location @relation(fields: [locationId], references: [id])
  locationId        Int
  eigenaarStraat    String
  huisNr            String
  naam              String
  fotoUrl           String
  chipped           Boolean
  geslacht          Sex      @relation(fields: [sexId], references: [id])
  sexId             Int
  rip               Boolean
  kleur             Color    @relation(fields: [colorId], references: [id])
  colorId           Int
  antwoordEigenaars String
}

model CatRace {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  cats    Cat[]
  enabled Boolean @default(true)
}

model Location {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  cats    Cat[]
  enabled Boolean @default(true)
}

model Sex {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  cats    Cat[]
  enabled Boolean @default(true)
}

model Color {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  cats    Cat[]
  enabled Boolean @default(true)
}
